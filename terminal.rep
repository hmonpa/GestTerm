// Dimensions i estrategia de la terminal
nat _n;                               // Fileres de la terminal
nat _m;                               // Plaçes per filera
nat _h;                               // Alçada màxima d'apilament
estrategia _st;                       // Estrategia utilizada

// ----- Estructures de dades -----
// 1. Catàleg de contenidors
cataleg<ubicacio> _ct;                 // Guarda els contenidors presents a la terminal (Àrees d'emmagatzematge i d'espera),
                                      // sent Clau = Matricula i Valor = Ubicació del contenidor

// 2. Àrea d'emmagatzematge: Ternary Search Tree
struct node_tst {
  int _k;                             // Clau = Enter que representará una filera, plaça o pis
  node_tst *_esq;                     // Fill esquerre
  node_tst *_dret;                    // Fill dret
  node_tst *_cen;                     // Fill central
  contenidor _v;                      // Valor = Contenidor
};
node_tst *_arrel;

// 3. Llista enllaçada: Guarda ubicacions lliures de l'àrea d'emmagatzematge
struct node {
  ubicacio _u;                        // Cada node de la llista guarda un objecte ubicació
  node *_seg;                         // Punter al següent node
  node *_ant;                         // Punter a l'anterior
};
node *_head;                          // Punter al primer element de la llista d'ubicacions lliures

// 4. Àrea espera: Guarda contenidors que no poden ser col·locats a l'àrea d'emmagatzematge
list<contenidor> _area_espera;


// Mètodes privats
void crea_llista_lliures(int n, int m, int h);
void borra_llista_lliures(node* &n);
node_tst* crea_tst(node_tst* n);
void borra_tst(node_tst* n);


// Estrategia FIRST_FIT
void insereix_ff(contenidor c, nat h) throw(error);         // Insereix contenidor seguint la estrategia FIRST_FIT
void retira_ff(const string &m) throw(error);               // Retira contenidor seguint la estrategia FIRST_FIT

// Estrategia LLIURE
void insereix_cont_LL(const contenidor &c) throw(error);    // Insereix contenidor seguint la estrategia LLIURE
void retira_cont_LL(const string &m) throw(error);          // Retira contenidor seguint la estrategia LLIURE

